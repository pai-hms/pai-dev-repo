services:
  postgres:
    image: postgres:16
    container_name: pai-sql-agent-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pai_sql_agent
    ports: ["5432:5432"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pai_sql_agent"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  app:
    build: .
    container_name: pai-sql-agent-app
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pai_sql_agent
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - LLM_PROVIDER=${LLM_PROVIDER:-}
      - LLM_MODEL_NAME=${LLM_MODEL_NAME:-}
      - SGIS_SERVICE_ID=${SGIS_SERVICE_ID:-}
      - SGIS_SECURITY_KEY=${SGIS_SECURITY_KEY:-}
      - LOG_LEVEL=INFO
    volumes:
      - ./src:/app/src
      - ./webapp:/app/webapp
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["8000:8000"]
    restart: unless-stopped

  streamlit:
    build: .
    container_name: pai-sql-agent-streamlit
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pai_sql_agent
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - LLM_PROVIDER=${LLM_PROVIDER:-}
      - LLM_MODEL_NAME=${LLM_MODEL_NAME:-}
      - SGIS_SERVICE_ID=${SGIS_SERVICE_ID:-}
      - SGIS_SECURITY_KEY=${SGIS_SECURITY_KEY:-}
      - LOG_LEVEL=INFO
    volumes:
      - ./src:/app/src
      - ./webapp:/app/webapp
    depends_on:
      - app
    ports: ["8501:8501"]
    command: ["streamlit", "run", "webapp/streamlit_app.py", "--server.port", "8501", "--server.address", "0.0.0.0"]
    restart: unless-stopped

  # 메모리 기능 테스트 서비스
  test-memory:
    build: .
    container_name: pai-sql-agent-test-memory
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pai_sql_agent
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - SGIS_SERVICE_ID=${SGIS_SERVICE_ID:-test}
      - SGIS_SECURITY_KEY=${SGIS_SECURITY_KEY:-test}
      - LOG_LEVEL=INFO
    volumes:
      - ./src:/app/src
      - ./webapp:/app/webapp
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    command: ["python", "test_memory_simple.py"]
    profiles: ["test"]  # 기본 실행에서 제외, 필요시에만 실행

volumes:
  postgres_data: